##
## Copyright (c) 2022-2023 Geosiris.
## SPDX-License-Identifier: Apache-2.0
##
name: OPC pypi

on:
  release:
    types: [created]

env:
  PKG_NAME: opc

jobs:

  build:
    name: Build distribution
    runs-on: ubuntu-latest

    strategy:
      matrix:
        xsd-link: ["http://geosiris.com/wp-content/uploads/2022/09/opc.zip"]

    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install poetry
        uses: ./.github/actions/prepare-poetry
        with:
          python-version: 3.9

      - name: Compute env variables
        uses: ./.github/actions/compute-env-variables
        with:
          xsd-url: ${{ matrix.xsd-link }}
          pkg-name: ${{ env.PKG_NAME }}

      - name: Generate python classes
        uses: ./.github/actions/xsdata-generation
        with:
          xsd-url: ${{ matrix.xsd-link }}
          pkg-name: ${{ env.PKG_NAME }}
          generation-type: single-package

      - name: Update toml
        run: |
          sed -i 's/<PROJECT_NAME>/energyml-'"${{ env.PKG_NAME }}"'/g' src/pyproject.toml
          sed -i 's/<PROJECT_SRC_FOLDER>/energyml/g' src/pyproject.toml
          sed -i 's/#\s*<PROJECT_DEPS>//g' src/pyproject.toml
          sed -i 's/<PROJECT_NAME>/energyml-'"${{ env.PKG_NAME }}"'/g' README.md
          cp README.md src/
          cp LICENSE src/

      - name: build
        run: |
          cd src
          poetry install
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry build

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifact
          path: src/

  publish:
    name: Publish to PyPI
    needs: [build]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        xsd-link: ["http://geosiris.com/wp-content/uploads/2022/09/opc.zip"]

    steps:

      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-artifact
          path: src/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      # Retrieve the code and GIT history so that poetry-dynamic-versioning knows which version to upload
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install poetry
        uses: ./.github/actions/prepare-poetry
        with:
          python-version: 3.9

      - name: Upload to PyPI TEST
        run: |
          cd src
          poetry self add "poetry-dynamic-versioning[plugin]"
          poetry config pypi-token.pypi ${{ secrets.POETRY_PYPI_TOKEN_PASSWORD }}
          poetry publish