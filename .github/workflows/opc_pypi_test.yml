name: OPC pypi-test

on: [push,pull_request]

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: Download OPC
        run : wget http://geosiris.com/wp-content/uploads/2022/09/opc.zip -P ${{ github.workspace }}
    
      - name: Unzip OPC
        run: 7z x ${GITHUB_WORKSPACE}/opc.zip -o${{ github.workspace }}/xsd/energyml/

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          pip install poetry-dynamic-versioning

      - name: generate
        run: |
          poetry install
          poetry run xsdata generate -ss namespace-clusters -p gen --postponed-annotations xsd/energyml/opc 
          poetry run rename_pkgs -s gen -o energyml-resqml22/energyml
          mv energyml-resqml22 src/

      - name: copy readme and license
        cp README.md src/
        cp LICENSE src/

      - name: build
        run: |
          sed -i 's/<PROJECT_NAME>/energyml-resqml22/g' src/pyproject.toml
          cd src
          poetry install
          poetry build

      - name: Save build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist-artifact
          path: src/dist/

  publish:
    name: Publish to PyPI
    needs: [build]
    runs-on: ubuntu-latest
    steps:

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Retrieve the code and GIT history so that poetry-dynamic-versioning knows which version to upload
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-artifact
          path: dist/

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          pip install poetry-dynamic-versioning

      - name: Update toml
        run: |
          sed -i 's/<PROJECT_NAME>/name = "energyml-resqml22"/g' src/pyproject.toml

      - name: Upload to PyPI TEST
        run: |
          cd src
          poetry config repositories.test https://test.pypi.org/legacy/
          poetry config http-basic.test ${{ secrets.POETRY_PYPI_TOKEN_USERNAME}} ${{ secrets.POETRY_TEST_PYPI_TOKEN_PASSWORD}}
          poetry publish --repository test


on:
  release:
    types: [created]

  # pull_request:
  #   branches: main

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.OSSRH_GPG_SECRET_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - id: install-secret-key
      name: Install gpg secret key
      run: cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          
    - name: Download OPC
      run : wget http://geosiris.com/wp-content/uploads/2022/09/opc.zip -P ${{ github.workspace }}
  
    - name: Unzip OPC
      run: 7z x ${GITHUB_WORKSPACE}/opc.zip -o${{ github.workspace }}/src/main/xsd/energyml/
      
    - name: Build with Maven
      run: mvn -B --file pom.xml clean deploy -P release
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
        PATH_TO_SCHEMAS: ${{ github.workspace }}/src/main/xsd/energyml/opc/opc-all.xsd
        PATH_TO_XJB: ${{ github.workspace }}/src/main/xjb/binding-opc.xjb
        PKG_NAME: opc
        PKG_VERSION: ""
        RENAME_SCRIPT_ARG: ""
